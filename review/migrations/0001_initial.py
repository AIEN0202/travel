# Generated by Django 2.0.5 on 2018-05-30 06:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('idcountry', models.IntegerField(db_column='idCountry', primary_key=True, serialize=False)),
                ('countryname', models.CharField(db_column='Countryname', max_length=45)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Horder',
            fields=[
                ('horder_id', models.IntegerField(primary_key=True, serialize=False)),
                ('horder_date', models.DateField(blank=True, null=True)),
                ('horder_out', models.DateField(blank=True, null=True)),
                ('horder_name', models.CharField(blank=True, max_length=45, null=True)),
                ('horder_tel', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'horder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('hotid', models.IntegerField(db_column='Hotid', primary_key=True, serialize=False)),
                ('hotcoutry', models.CharField(blank=True, db_column='HotCoutry', max_length=20, null=True)),
                ('hotarea', models.CharField(blank=True, db_column='HotArea', max_length=45, null=True)),
                ('hotname', models.CharField(blank=True, db_column='HotName', max_length=45, null=True)),
                ('hotprice', models.CharField(blank=True, db_column='HotPrice', max_length=45, null=True)),
                ('hottype', models.CharField(blank=True, db_column='HotType', max_length=45, null=True)),
                ('hotpeople', models.IntegerField(blank=True, db_column='HotPeople', null=True)),
                ('hotcustomername', models.CharField(blank=True, db_column='Hotcustomername', max_length=45, null=True)),
                ('hotcustomertel', models.IntegerField(blank=True, db_column='Hotcustomertel', null=True)),
                ('hotsustomerid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hotel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('tripid', models.IntegerField(db_column='TripID', primary_key=True, serialize=False)),
                ('tripname', models.CharField(db_column='TripName', max_length=20)),
                ('day', models.IntegerField(db_column='Day')),
                ('len', models.IntegerField(db_column='Len')),
                ('arrival', models.DateField(db_column='Arrival')),
                ('departure', models.DateField(blank=True, db_column='Departure', null=True)),
                ('travelers', models.IntegerField(db_column='Travelers')),
                ('paced', models.CharField(blank=True, db_column='Paced', max_length=20, null=True)),
                ('style', models.CharField(blank=True, db_column='Style', max_length=20, null=True)),
            ],
            options={
                'db_table': 'itinerary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('idmember', models.IntegerField(db_column='idMember', primary_key=True, serialize=False)),
                ('membername', models.CharField(db_column='Membername', max_length=45)),
                ('memberbday', models.DateField(db_column='MemberBday')),
                ('membergender', models.IntegerField(db_column='MemberGender')),
                ('memberhobby', models.CharField(blank=True, db_column='MemberHobby', max_length=45, null=True)),
            ],
            options={
                'db_table': 'member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.IntegerField(db_column='Orderid', primary_key=True, serialize=False)),
                ('bookingdate', models.DateTimeField(db_column='BookingDate')),
                ('numberofpeople', models.IntegerField(db_column='NumberOfPeople')),
                ('hotname', models.CharField(max_length=20)),
                ('hottel', models.IntegerField()),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('idplace', models.IntegerField(primary_key=True, serialize=False)),
                ('placename', models.CharField(blank=True, db_column='PlaceName', max_length=45, null=True)),
                ('placeaddr', models.CharField(db_column='PlaceAddr', max_length=100)),
                ('typeoffun', models.CharField(db_column='TypeofFun', max_length=5)),
                ('ticketp', models.IntegerField(blank=True, db_column='TicketP', null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=45, null=True)),
                ('hours', models.CharField(blank=True, db_column='Hours', max_length=45, null=True)),
                ('dateofholiday', models.CharField(blank=True, db_column='DateofHoliday', max_length=45, null=True)),
            ],
            options={
                'db_table': 'place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('resid', models.IntegerField(db_column='Resid', primary_key=True, serialize=False)),
                ('rescountry', models.CharField(blank=True, db_column='ResCountry', max_length=20, null=True)),
                ('resarea', models.CharField(blank=True, db_column='ResArea', max_length=20, null=True)),
                ('restype', models.CharField(blank=True, db_column='ResType', max_length=20, null=True)),
                ('resname', models.CharField(blank=True, db_column='ResName', max_length=20, null=True)),
                ('mealtime', models.CharField(blank=True, db_column='MealTime', max_length=45, null=True)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('remainingseats', models.IntegerField(blank=True, db_column='RemainingSeats', null=True)),
                ('resaddress', models.CharField(blank=True, db_column='ResAddress', max_length=60, null=True)),
            ],
            options={
                'db_table': 'restaurant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('typeplace', models.CharField(blank=True, db_column='TypePlace', max_length=45, null=True)),
                ('filtertypes', models.CharField(blank=True, db_column='FilterTypes', max_length=45, null=True)),
                ('rating', models.CharField(blank=True, db_column='Rating', max_length=45, null=True)),
                ('datereview', models.CharField(blank=True, db_column='DateReview', max_length=45, null=True)),
                ('contentofreview', models.CharField(blank=True, db_column='ContentofReview', max_length=45, null=True)),
                ('idreview', models.IntegerField(db_column='idReview', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItineraryDay',
            fields=[
                ('idday', models.ForeignKey(db_column='idday', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='review.Itinerary')),
                ('hotno', models.CharField(db_column='Hotno', max_length=800)),
                ('togo', models.CharField(max_length=800)),
                ('tripid', models.IntegerField(db_column='TripID')),
            ],
            options={
                'db_table': 'itinerary_day',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('idregion', models.ForeignKey(db_column='idRegion', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='review.Country')),
                ('regionname', models.CharField(db_column='Regionname', max_length=45)),
                ('idcountry', models.IntegerField(db_column='idCountry')),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
    ]
